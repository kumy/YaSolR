; PlatformIO Project Configuration File
;
;   Build options: build flags, source filter
;   Upload options: custom upload port, speed and extra flags
;   Library options: dependencies, extra library storages
;   Advanced options: extra scripting
;
; Please visit documentation for the other options and examples
; https://docs.platformio.org/page/projectconf.html

[platformio]
name = YaSolR
extra_configs = platformio_override.ini
default_envs = oss-esp32, pro-esp32, trial-esp32

[env]
framework = arduino
platform = espressif32@6.7.0
platform_packages=
  platformio/framework-arduinoespressif32 @ https://github.com/espressif/arduino-esp32.git#3.0.2
  platformio/framework-arduinoespressif32-libs @ https://github.com/espressif/arduino-esp32/releases/download/3.0.2/esp32-arduino-libs-3.0.2.zip
board = esp32dev
monitor_filters = esp32_exception_decoder, log2file
monitor_speed = 115200
upload_protocol = esptool
upload_speed = 921600
; upload_protocol = custom
; upload_url = http://192.168.125.119
extra_scripts =
    pre:pio/data.py
    pre:pio/version.py
    post:pio/factory.py
    ; pio/upload.py
lib_compat_mode = strict
lib_ldf_mode = chain
; https://github.com/espressif/arduino-esp32/issues/9782
; lib_ldf_mode = deep+
lib_deps =
  DNSServer
  ESP32 Async UDP
  ESPmDNS
  FS
  Networking
  LittleFS
  WiFi
  Ticker
  Update
  bblanchon/ArduinoJson @ 7.1.0
  olikraus/U8g2 @ 2.35.19
  robtillaart/CRC @ 1.0.3
  # mathieucarbou/Async TCP @ 3.1.4
  https://github.com/mathieucarbou/AsyncTCP#dev
  mathieucarbou/ESP Async WebServer @ 3.0.6
  mathieucarbou/MycilaConfig @ 3.0.1
  mathieucarbou/MycilaDS18 @ 3.0.4
  mathieucarbou/MycilaESPConnect @ 4.4.0
  mathieucarbou/MycilaEasyDisplay @ 3.0.1
  mathieucarbou/MycilaHADiscovery @ 2.2.1
  mathieucarbou/MycilaJSY @ 9.0.8
  mathieucarbou/MycilaLogger @ 3.1.2
  mathieucarbou/MycilaMQTT @ 4.1.1
  mathieucarbou/MycilaNTP @ 4.0.0
  mathieucarbou/MycilaPZEM004Tv3 @ 4.0.6
  mathieucarbou/MycilaRelay @ 4.0.1
  mathieucarbou/MycilaSystem @ 2.0.5
  mathieucarbou/MycilaTaskManager @ 3.1.2
  mathieucarbou/MycilaTaskMonitor @ 3.0.1
  mathieucarbou/MycilaTrafficLight @ 1.0.0
  mathieucarbou/MycilaUtilities @ 1.2.0
build_flags =
  -D ARDUINO_LOOP_STACK_SIZE=4096
  -D CONFIG_ASYNC_TCP_MAX_ACK_TIME=3000
  -D CONFIG_ASYNC_TCP_PRIORITY=10
  -D CONFIG_ASYNC_TCP_QUEUE_SIZE=128
  -D CONFIG_ASYNC_TCP_RUNNING_CORE=1
  -D CONFIG_ASYNC_TCP_STACK_SIZE=4608
  -D CONFIG_MQTT_TASK_CORE_SELECTION=1
  -D DASH_DEFAULT_CARD_SIZE_LG=6
  -D DASH_DEFAULT_CARD_SIZE_MD=6
  -D DASH_DEFAULT_CARD_SIZE_SM=6
  -D DASH_DEFAULT_CARD_SIZE_XL=6
  -D DASH_DEFAULT_CARD_SIZE_XS=12
  -D DASH_DEFAULT_CARD_SIZE_XXL=3
  -D ELEGANTOTA_USE_ASYNC_WEBSERVER=1
  ; Flag to disable mDNS which takes a lot of memory
  ; 25.6 KB â€¦espressif__mdns/mdns.c
  ; -D ESPCONNECT_NO_MDNS
  ; Flag to disable secure clients
  ; https://github.com/espressif/arduino-esp32/pull/9893
  -D HTTPCLIENT_NOSECURE
  -D MQTT_REPORT_DELETED_MESSAGES=1
  -D MYCILA_JSON_SUPPORT
  -D MYCILA_LOGGER_SUPPORT
  -D MYCILA_MQTT_BUFFER_SIZE=512
  -D MYCILA_MQTT_STACK_SIZE=4096
  -D MYCILA_MQTT_TASK_PRIORITY=5
  -D WS_MAX_QUEUED_MESSAGES=64
  -D WSL_HIGH_PERF
  -D YASOLR_LANG=YASOLR_LANG_EN
  -Wall -Wextra
  -std=c++17
  -std=gnu++17
build_unflags =
    -std=gnu++11
board_build.partitions = partitions.csv
board_build.filesystem = littlefs
board_build.embed_files =
  .pio/data/logo.png.gz
  .pio/data/logo-icon.png.gz
  .pio/data/config.html.gz

; --------------------------------------------------------------------
; RELEASES
; --------------------------------------------------------------------

[release]
; https://docs.espressif.com/projects/esp-idf/en/latest/esp32/api-reference/kconfig.html#config-compiler-optimization-assertion-level
# https://docs.espressif.com/projects/esp-idf/en/stable/esp32/api-guides/performance/size.html
build_flags =
  -Os
  -D CORE_DEBUG_LEVEL=ARDUHAL_LOG_LEVEL_INFO
  -D NDEBUG
  -D RELEASE=1

[debug]
build_flags =
  -Og
  -ggdb -ggdb3 -g3
  -D CONFIG_ARDUHAL_LOG_COLORS
  -D CORE_DEBUG_LEVEL=ARDUHAL_LOG_LEVEL_DEBUG
  -D ESPCONNECT_PORTAL_TIMEOUT=60

; --------------------------------------------------------------------
; MODELS
; --------------------------------------------------------------------

[oss]
build_flags = -D APP_MODEL_OSS
lib_deps =
  ; mathieucarbou/WebSerialLite @ 6.1.0
  ayushsharma82/WebSerial @ 2.0.4
  ayushsharma82/ElegantOTA @ 3.1.2
  ; ayushsharma82/ESP-DASH @ 4.0.5
  https://github.com/mathieucarbou/ayushsharma82-ESP-DASH#dev
lib_ignore =
  ElegantOTAPro
  ESPDASHPro
  WebSerialPro

[pro]
build_flags = -D APP_MODEL_PRO
lib_deps =
lib_ignore =

[trial]
build_flags =
  ${pro.build_flags} 
  -D APP_MODEL_TRIAL
  ; 3 days trial (259200 seconds)
  -D MYCILA_TRIAL_DURATION=259200
lib_deps =
  mathieucarbou/MycilaTrial @ 1.1.0
lib_ignore =

; --------------------------------------------------------------------
; SHORTCUTS
; --------------------------------------------------------------------

[unpin]
build_flags =
  -D YASOLR_DISPLAY_CLOCK_PIN=-1
  -D YASOLR_DISPLAY_DATA_PIN=-1
  -D YASOLR_JSY_RX_PIN=-1
  -D YASOLR_JSY_TX_PIN=-1
  -D YASOLR_LIGHTS_GREEN_PIN=-1
  -D YASOLR_LIGHTS_RED_PIN=-1
  -D YASOLR_LIGHTS_YELLOW_PIN=-1
  -D YASOLR_OUTPUT1_DIMMER_PIN=-1
  -D YASOLR_OUTPUT1_RELAY_PIN=-1
  -D YASOLR_OUTPUT1_TEMP_PIN=-1
  -D YASOLR_OUTPUT2_DIMMER_PIN=-1
  -D YASOLR_OUTPUT2_RELAY_PIN=-1
  -D YASOLR_OUTPUT2_TEMP_PIN=-1
  -D YASOLR_RELAY1_PIN=-1
  -D YASOLR_RELAY2_PIN=-1
  -D YASOLR_SYSTEM_TEMP_PIN=-1
  -D YASOLR_ZCD_PIN=-1
  -D YASOLR_PZEM_RX_PIN=-1
  -D YASOLR_PZEM_TX_PIN=-1

; --------------------------------------------------------------------
; ENVIRONMENTs
; --------------------------------------------------------------------

; esp32dev (defaul)

[env:oss-esp32]
build_type = release
lib_deps =
  ${env.lib_deps}
  ${oss.lib_deps}
lib_ignore =
  ${env.lib_ignore}
  ${oss.lib_ignore}
build_flags =
  ${env.build_flags}
  ${oss.build_flags}
  ${release.build_flags}

[env:oss-esp32-debug]
build_type = debug
lib_deps =
  ${env.lib_deps}
  ${oss.lib_deps}
lib_ignore =
  ${env.lib_ignore}
  ${oss.lib_ignore}
build_flags =
  ${env.build_flags}
  ${oss.build_flags}
  ${debug.build_flags}

[env:pro-esp32]
build_type = release
lib_deps =
  ${env.lib_deps}
  ${pro.lib_deps}
lib_ignore =
  ${env.lib_ignore}
  ${pro.lib_ignore}
build_flags =
  ${env.build_flags}
  ${pro.build_flags}
  ${release.build_flags}

[env:pro-esp32-debug]
build_type = debug
lib_deps =
  ${env.lib_deps}
  ${pro.lib_deps}
lib_ignore =
  ${env.lib_ignore}
  ${pro.lib_ignore}
build_flags =
  ${env.build_flags}
  ${pro.build_flags}
  ${debug.build_flags}

[env:trial-esp32]
build_type = release
lib_deps =
  ${env.lib_deps}
  ${trial.lib_deps}
lib_ignore =
  ${env.lib_ignore}
  ${trial.lib_ignore}
build_flags =
  ${env.build_flags}
  ${trial.build_flags}
  ${release.build_flags}

[env:trial-esp32-debug]
build_type = debug
lib_deps =
  ${env.lib_deps}
  ${trial.lib_deps}
lib_ignore =
  ${env.lib_ignore}
  ${trial.lib_ignore}
build_flags =
  ${env.build_flags}
  ${trial.build_flags}
  ${debug.build_flags}

; nodemcu-32s

[env:oss-esp32s]
extends = env:oss-esp32
board = nodemcu-32s

[env:oss-esp32s-debug]
extends = env:oss-esp32-debug
board = nodemcu-32s

[env:pro-esp32s]
extends = env:pro-esp32
board = nodemcu-32s

[env:pro-esp32s-debug]
extends = env:pro-esp32-debug
board = nodemcu-32s

[env:trial-esp32s]
extends = env:trial-esp32
board = nodemcu-32s

[env:trial-esp32s-debug]
extends = env:trial-esp32-debug
board = nodemcu-32s

; esp32c3

; [esp32c3]
; build_flags =
;   ${unpin.build_flags}

; [env:oss-esp32c3]
; extends = env:oss-esp32
; board = esp32-c3-devkitc-02
; build_flags =
;   ${env.build_flags}
;   ${oss.build_flags}
;   ${release.build_flags}
;   ${esp32c3.build_flags}

; [env:oss-esp32c3-debug]
; extends = env:oss-esp32-debug
; board = esp32-c3-devkitc-02
; build_flags =
;   ${env.build_flags}
;   ${oss.build_flags}
;   ${debug.build_flags}
;   ${esp32c3.build_flags}

; [env:pro-esp32c3]
; extends = env:pro-esp32
; board = esp32-c3-devkitc-02
; build_flags =
;   ${env.build_flags}
;   ${pro.build_flags}
;   ${release.build_flags}
;   ${esp32c3.build_flags}

; [env:pro-esp32c3-debug]
; extends = env:pro-esp32-debug
; board = esp32-c3-devkitc-02
; build_flags =
;   ${env.build_flags}
;   ${pro.build_flags}
;   ${debug.build_flags}
;   ${esp32c3.build_flags}

; [env:trial-esp32c3]
; extends = env:trial-esp32
; board = esp32-c3-devkitc-02
; build_flags =
;   ${env.build_flags}
;   ${trial.build_flags}
;   ${release.build_flags}
;   ${esp32c3.build_flags}

; [env:trial-esp32c3-debug]
; extends = env:trial-esp32
; board = esp32-c3-devkitc-02
; build_flags =
;   ${env.build_flags}
;   ${trial.build_flags}
;   ${debug.build_flags}
;   ${esp32c3.build_flags}

; esp32s3

[esp32s3]
build_flags =
  -D YASOLR_OUTPUT2_DIMMER_PIN=36
  -D YASOLR_OUTPUT1_DIMMER_PIN=37
  -D YASOLR_OUTPUT1_RELAY_PIN=40
  -D YASOLR_PZEM_RX_PIN=14
  -D YASOLR_PZEM_TX_PIN=11

[env:oss-esp32s3]
extends = env:oss-esp32
board = esp32-s3-devkitc-1
build_flags =
  ${env.build_flags}
  ${oss.build_flags}
  ${release.build_flags}
  ${esp32s3.build_flags}

[env:oss-esp32s3-debug]
extends = env:oss-esp32-debug
board = esp32-s3-devkitc-1
build_flags =
  ${env.build_flags}
  ${oss.build_flags}
  ${debug.build_flags}
  ${esp32s3.build_flags}

[env:pro-esp32s3]
extends = env:pro-esp32
board = esp32-s3-devkitc-1
build_flags =
  ${env.build_flags}
  ${pro.build_flags}
  ${release.build_flags}
  ${esp32s3.build_flags}

[env:pro-esp32s3-debug]
extends = env:pro-esp32-debug
board = esp32-s3-devkitc-1
build_flags =
  ${env.build_flags}
  ${pro.build_flags}
  ${debug.build_flags}
  ${esp32s3.build_flags}

[env:trial-esp32s3]
extends = env:trial-esp32
board = esp32-s3-devkitc-1
build_flags =
  ${env.build_flags}
  ${trial.build_flags}
  ${release.build_flags}
  ${esp32s3.build_flags}

[env:trial-esp32s3-debug]
extends = env:trial-esp32-debug
board = esp32-s3-devkitc-1
build_flags =
  ${env.build_flags}
  ${trial.build_flags}
  ${debug.build_flags}
  ${esp32s3.build_flags}

; esp32_poe

; [esp32_poe]
; build_flags =
;   ${unpin.build_flags}

; [env:oss-esp32_poe]
; extends = env:oss-esp32
; board = esp32-poe
; build_flags =
;   ${env.build_flags}
;   ${oss.build_flags}
;   ${release.build_flags}
;   ${esp32_poe.build_flags}

; [env:oss-esp32_poe-debug]
; extends = env:oss-esp32-debug
; board = esp32-poe
; build_flags =
;   ${env.build_flags}
;   ${oss.build_flags}
;   ${debug.build_flags}
;   ${esp32_poe.build_flags}

; [env:pro-esp32_poe]
; extends = env:pro-esp32
; board = esp32-poe
; build_flags =
;   ${env.build_flags}
;   ${pro.build_flags}
;   ${release.build_flags}
;   ${esp32_poe.build_flags}

; [env:pro-esp32_poe-debug]
; extends = env:pro-esp32-debug
; board = esp32-poe
; build_flags =
;   ${env.build_flags}
;   ${pro.build_flags}
;   ${debug.build_flags}
;   ${esp32_poe.build_flags}

; [env:trial-esp32_poe]
; extends = env:trial-esp32
; board = esp32-poe
; build_flags =
;   ${env.build_flags}
;   ${trial.build_flags}
;   ${release.build_flags}
;   ${esp32_poe.build_flags}

; [env:trial-esp32_poe-debug]
; extends = env:trial-esp32
; board = esp32-poe
; build_flags =
;   ${env.build_flags}
;   ${trial.build_flags}
;   ${debug.build_flags}
;   ${esp32_poe.build_flags}

; wt32_eth01
; https://github.com/egnor/wt32-eth01

[wt32_eth01]
build_flags =
  -D ESPCONNECT_ETH_RESET_ON_START
  -D ESPCONNECT_ETH_SUPPORT
  -D ETH_PHY_ADDR=1
  -D ETH_PHY_POWER=16
  -D YASOLR_JSY_TX_PIN=5
  -D YASOLR_LIGHTS_GREEN_PIN=-1
  -D YASOLR_LIGHTS_RED_PIN=-1
  -D YASOLR_LIGHTS_YELLOW_PIN=-1
  -D YASOLR_OUTPUT1_DIMMER_PIN=2
  -D YASOLR_OUTPUT1_RELAY_PIN=12
  -D YASOLR_OUTPUT1_TEMP_PIN=15
  -D YASOLR_OUTPUT2_DIMMER_PIN=-1
  -D YASOLR_OUTPUT2_RELAY_PIN=-1
  -D YASOLR_OUTPUT2_TEMP_PIN=-1
  -D YASOLR_RELAY1_PIN=14
  -D YASOLR_RELAY2_PIN=-1
  -D YASOLR_PZEM_RX_PIN=-1
  -D YASOLR_PZEM_TX_PIN=-1

[env:oss-wt32_eth01]
extends = env:oss-esp32
board = wt32-eth01
upload_speed = 460800
build_flags =
  ${env.build_flags}
  ${oss.build_flags}
  ${release.build_flags}
  ${wt32_eth01.build_flags}

[env:oss-wt32_eth01-debug]
extends = env:oss-esp32-debug
board = wt32-eth01
upload_speed = 460800
build_flags =
  ${env.build_flags}
  ${oss.build_flags}
  ${debug.build_flags}
  ${wt32_eth01.build_flags}

[env:pro-wt32_eth01]
extends = env:pro-esp32
board = wt32-eth01
upload_speed = 460800
build_flags =
  ${env.build_flags}
  ${pro.build_flags}
  ${release.build_flags}
  ${wt32_eth01.build_flags}

[env:pro-wt32_eth01-debug]
extends = env:pro-esp32-debug
board = wt32-eth01
upload_speed = 460800
build_flags =
  ${env.build_flags}
  ${pro.build_flags}
  ${debug.build_flags}
  ${wt32_eth01.build_flags}

[env:trial-wt32_eth01]
extends = env:trial-esp32
board = wt32-eth01
upload_speed = 460800
build_flags =
  ${env.build_flags}
  ${trial.build_flags}
  ${release.build_flags}
  ${wt32_eth01.build_flags}

[env:trial-wt32_eth01-debug]
extends = env:trial-esp32-debug
board = wt32-eth01
upload_speed = 460800
build_flags =
  ${env.build_flags}
  ${trial.build_flags}
  ${debug.build_flags}
  ${wt32_eth01.build_flags}

; lilygo_eth_lite_s3
; https://github.com/Xinyuan-LilyGO/LilyGO-T-ETH-Series/

[lilygo_eth_lite_s3]
build_flags =
  -D ESPCONNECT_ETH_SUPPORT
  -D ETH_PHY_ADDR=1
  -D ETH_PHY_CS=9
  -D ETH_PHY_IRQ=13
  -D ETH_PHY_RST=14
  -D ETH_PHY_SPI_MISO=11
  -D ETH_PHY_SPI_MOSI=12
  -D ETH_PHY_SPI_SCK=10
  -D ETH_PHY_TYPE=ETH_PHY_W5500
  -D YASOLR_JSY_RX_PIN=17
  -D YASOLR_JSY_TX_PIN=18
  -D YASOLR_LIGHTS_GREEN_PIN=38
  -D YASOLR_LIGHTS_RED_PIN=46
  -D YASOLR_LIGHTS_YELLOW_PIN=21
  -D YASOLR_OUTPUT1_DIMMER_PIN=19
  -D YASOLR_OUTPUT1_RELAY_PIN=20
  -D YASOLR_OUTPUT1_TEMP_PIN=3
  -D YASOLR_OUTPUT2_DIMMER_PIN=7
  -D YASOLR_OUTPUT2_RELAY_PIN=15
  -D YASOLR_OUTPUT2_TEMP_PIN=16
  -D YASOLR_RELAY1_PIN=5
  -D YASOLR_RELAY2_PIN=6
  -D YASOLR_SYSTEM_TEMP_PIN=4
  -D YASOLR_ZCD_PIN=8
  -D YASOLR_PZEM_RX_PIN=-1
  -D YASOLR_PZEM_TX_PIN=-1

[env:oss-lilygo_eth_lite_s3]
extends = env:oss-esp32
board = esp32s3box
upload_speed = 115200
build_flags =
  ${env.build_flags}
  ${oss.build_flags}
  ${release.build_flags}
  ${lilygo_eth_lite_s3.build_flags}

[env:oss-lilygo_eth_lite_s3-debug]
extends = env:oss-esp32-debug
board = esp32s3box
upload_speed = 115200
build_flags =
  ${env.build_flags}
  ${oss.build_flags}
  ${debug.build_flags}
  ${lilygo_eth_lite_s3.build_flags}

[env:pro-lilygo_eth_lite_s3]
extends = env:pro-esp32
board = esp32s3box
upload_speed = 115200
build_flags =
  ${env.build_flags}
  ${pro.build_flags}
  ${release.build_flags}
  ${lilygo_eth_lite_s3.build_flags}

[env:pro-lilygo_eth_lite_s3-debug]
extends = env:pro-esp32-debug
board = esp32s3box
upload_speed = 115200
build_flags =
  ${env.build_flags}
  ${pro.build_flags}
  ${debug.build_flags}
  ${lilygo_eth_lite_s3.build_flags}

[env:trial-lilygo_eth_lite_s3]
extends = env:trial-esp32
board = esp32s3box
upload_speed = 115200
build_flags =
  ${env.build_flags}
  ${trial.build_flags}
  ${release.build_flags}
  ${lilygo_eth_lite_s3.build_flags}

[env:trial-lilygo_eth_lite_s3-debug]
extends = env:trial-esp32
board = esp32s3box
upload_speed = 115200
build_flags =
  ${env.build_flags}
  ${trial.build_flags}
  ${debug.build_flags}
  ${lilygo_eth_lite_s3.build_flags}

; m5stack-atom

; [m5stack_atom]
; build_flags =
;   ${unpin.build_flags}

; [env:oss-m5stack_atom]
; extends = env:oss-esp32
; board = m5stack-atom
; build_flags =
;   ${env.build_flags}
;   ${oss.build_flags}
;   ${release.build_flags}
;   ${m5stack_atom.build_flags}

; [env:oss-m5stack_atom-debug]
; extends = env:oss-esp32-debug
; board = m5stack-atom
; build_flags =
;   ${env.build_flags}
;   ${oss.build_flags}
;   ${debug.build_flags}
;   ${m5stack_atom.build_flags}

; [env:pro-m5stack_atom]
; extends = env:pro-esp32
; board = m5stack-atom
; build_flags =
;   ${env.build_flags}
;   ${pro.build_flags}
;   ${release.build_flags}
;   ${m5stack_atom.build_flags}

; [env:pro-m5stack_atom-debug]
; extends = env:pro-esp32-debug
; board = m5stack-atom
; build_flags =
;   ${env.build_flags}
;   ${pro.build_flags}
;   ${debug.build_flags}
;   ${m5stack_atom.build_flags}

; [env:trial-m5stack_atom]
; extends = env:trial-esp32
; board = m5stack-atom
; build_flags =
;   ${env.build_flags}
;   ${trial.build_flags}
;   ${release.build_flags}
;   ${m5stack_atom.build_flags}

; [env:trial-m5stack_atom-debug]
; extends = env:trial-esp32
; board = m5stack-atom
; build_flags =
;   ${env.build_flags}
;   ${trial.build_flags}
;   ${debug.build_flags}
;   ${m5stack_atom.build_flags}

; m5stack-atoms3

; [m5stack_atoms3]
; build_flags =
;   ${unpin.build_flags}

; [env:oss-m5stack_atoms3]
; extends = env:oss-esp32
; board = m5stack-atoms3
; build_flags =
;   ${env.build_flags}
;   ${oss.build_flags}
;   ${release.build_flags}
;   ${m5stack_atoms3.build_flags}

; [env:oss-m5stack_atoms3-debug]
; extends = env:oss-esp32-debug
; board = m5stack-atoms3
; build_flags =
;   ${env.build_flags}
;   ${oss.build_flags}
;   ${debug.build_flags}
;   ${m5stack_atoms3.build_flags}

; [env:pro-m5stack_atoms3]
; extends = env:pro-esp32
; board = m5stack-atoms3
; build_flags =
;   ${env.build_flags}
;   ${pro.build_flags}
;   ${release.build_flags}
;   ${m5stack_atoms3.build_flags}

; [env:pro-m5stack_atoms3-debug]
; extends = env:pro-esp32-debug
; board = m5stack-atoms3
; build_flags =
;   ${env.build_flags}
;   ${pro.build_flags}
;   ${debug.build_flags}
;   ${m5stack_atoms3.build_flags}

; [env:trial-m5stack_atoms3]
; extends = env:trial-esp32
; board = m5stack-atoms3
; build_flags =
;   ${env.build_flags}
;   ${trial.build_flags}
;   ${release.build_flags}
;   ${m5stack_atoms3.build_flags}

; [env:trial-m5stack_atoms3-debug]
; extends = env:trial-esp32
; board = m5stack-atoms3
; build_flags =
;   ${env.build_flags}
;   ${trial.build_flags}
;   ${debug.build_flags}
;   ${m5stack_atoms3.build_flags}
