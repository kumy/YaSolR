// SPDX-License-Identifier: MIT
/*
 * Copyright (C) 2023-2024 Mathieu Carbou and others
 */
#pragma once

#include "MycilaDimmer.h"
#include <Arduino.h>

namespace Mycila {
  namespace DimmerInternal {
    static const uint16_t delay50HzLUT[] PROGMEM = {10000, 9695, 9297, 9054, 8720, 8517, 8240, 8071, 7841, 7702, 7512, 7343, 7241, 7102, 7018, 6904, 6834, 6739, 6681, 6601, 6529, 6484, 6420, 6380, 6323, 6287, 6234, 6199, 6148, 6114, 6063, 6012, 5977, 5925, 5889, 5834, 5796, 5738, 5699, 5639, 5576, 5534, 5469, 5425, 5358, 5313, 5244, 5198, 5128, 5081, 5010, 4940, 4893, 4822, 4776, 4707, 4661, 4594, 4549, 4484, 4420, 4379, 4318, 4278, 4219, 4181, 4126, 4090, 4036, 4001, 3950, 3899, 3865, 3814, 3779, 3726, 3690, 3634, 3595, 3533, 3466, 3418, 3341, 3284, 3193, 3126, 3015, 2934, 2800, 2702, 2540, 2357, 2223, 2001, 1839, 1571, 1375, 1053, 819, 434, 7};
    static const uint16_t delay60HzLUT[] PROGMEM = {8333, 8079, 7747, 7544, 7266, 7097, 6866, 6725, 6534, 6418, 6260, 6119, 6034, 5918, 5848, 5753, 5695, 5616, 5567, 5501, 5440, 5402, 5350, 5316, 5269, 5238, 5194, 5165, 5123, 5095, 5052, 5009, 4981, 4937, 4907, 4861, 4830, 4782, 4749, 4698, 4647, 4612, 4558, 4521, 4465, 4428, 4370, 4332, 4273, 4234, 4176, 4117, 4078, 4019, 3980, 3923, 3885, 3829, 3792, 3738, 3685, 3650, 3599, 3566, 3518, 3486, 3440, 3410, 3366, 3337, 3294, 3251, 3223, 3181, 3152, 3109, 3079, 3032, 3000, 2948, 2892, 2853, 2788, 2742, 2665, 2610, 2518, 2451, 2339, 2258, 2123, 1971, 1859, 1675, 1539, 1317, 1154, 886, 690, 370, 15};
    static const float vrms50HzLUT[] PROGMEM = {0.000000, 0.013651, 0.047579, 0.073978, 0.115582, 0.143344, 0.183686, 0.209472, 0.245732, 0.268189, 0.299415, 0.327596, 0.344743, 0.368233, 0.382476, 0.401839, 0.413736, 0.429877, 0.439724, 0.453285, 0.465465, 0.473062, 0.483843, 0.490564, 0.500119, 0.506137, 0.514973, 0.520792, 0.529244, 0.534861, 0.543258, 0.551618, 0.557334, 0.565792, 0.571622, 0.580487, 0.586581, 0.595833, 0.602018, 0.611476, 0.621329, 0.627851, 0.637868, 0.644595, 0.654753, 0.661514, 0.671785, 0.678565, 0.688777, 0.695560, 0.705691, 0.715541, 0.722075, 0.731822, 0.738056, 0.747285, 0.753355, 0.762077, 0.767853, 0.776080, 0.784044, 0.789073, 0.796450, 0.801217, 0.808148, 0.812547, 0.818824, 0.822874, 0.828862, 0.832687, 0.838181, 0.843579, 0.847125, 0.852364, 0.855903, 0.861176, 0.864697, 0.870078, 0.873756, 0.879484, 0.885510, 0.889722, 0.896296, 0.901017, 0.908297, 0.913456, 0.921626, 0.927294, 0.936128, 0.942165, 0.951370, 0.960632, 0.966670, 0.975344, 0.980676, 0.987777, 0.991727, 0.996235, 0.998215, 0.999732, 1.000000};
    static const float vrms60HzLUT[] PROGMEM = {0.000000, 0.013664, 0.047640, 0.074117, 0.115688, 0.143429, 0.183807, 0.209627, 0.245764, 0.268254, 0.299415, 0.327629, 0.344777, 0.368301, 0.382544, 0.401907, 0.413736, 0.429844, 0.439825, 0.453251, 0.465634, 0.473332, 0.483843, 0.490699, 0.500152, 0.506371, 0.515173, 0.520958, 0.529310, 0.534861, 0.543356, 0.551815, 0.557302, 0.565889, 0.571719, 0.580615, 0.586581, 0.595769, 0.602050, 0.611696, 0.621266, 0.627789, 0.637776, 0.644565, 0.654753, 0.661425, 0.671785, 0.678507, 0.688835, 0.695589, 0.705521, 0.715485, 0.721992, 0.731713, 0.738056, 0.747205, 0.753224, 0.761974, 0.767675, 0.775880, 0.783797, 0.788951, 0.796354, 0.801075, 0.807845, 0.812294, 0.818598, 0.822650, 0.828510, 0.832318, 0.837882, 0.843349, 0.846856, 0.852038, 0.855561, 0.860703, 0.864230, 0.869660, 0.873287, 0.879064, 0.885119, 0.889235, 0.895910, 0.900493, 0.907906, 0.913001, 0.921154, 0.926800, 0.935696, 0.941710, 0.950959, 0.960242, 0.966335, 0.975024, 0.980438, 0.987562, 0.991553, 0.996126, 0.998156, 0.999713, 1.000000};
  } // namespace DimmerInternal
} // namespace Mycila

uint16_t Mycila::Dimmer::_lookupFiringDelay(uint8_t level, float frequency) {
  if (level == 0)
    return 500000 / frequency; // semi-period in microseconds

  if (level == MYCILA_DIMMER_MAX_LEVEL)
    return 0;

  return frequency == 60 ? (uint16_t)pgm_read_word(&Mycila::DimmerInternal::delay60HzLUT[level]) : (uint16_t)pgm_read_word(&Mycila::DimmerInternal::delay50HzLUT[level]);
}

float Mycila::Dimmer::_lookupVrmsFactor(uint8_t level, float frequency) {
  if (level == 0)
    return 0;

  if (level == MYCILA_DIMMER_MAX_LEVEL)
    return 1;

  return frequency == 60 ? static_cast<float>(pgm_read_float(&Mycila::DimmerInternal::vrms60HzLUT[level])) : static_cast<float>(pgm_read_float(&Mycila::DimmerInternal::vrms50HzLUT[level]));
}
