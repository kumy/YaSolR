// SPDX-License-Identifier: MIT
/*
 * Copyright (C) 2023-2024 Mathieu Carbou and others
 */
#pragma once

#include "MycilaDimmer.h"
#include <Arduino.h>

namespace Mycila {
  namespace DimmerInternal {
    static const uint16_t delay50HzLUT[] PROGMEM = {10000, 9961, 9922, 9883, 9844, 9804, 9765, 9726, 9687, 9648, 9608, 9569, 9530, 9491, 9451, 9412, 9373, 9334, 9295, 9255, 9216, 9177, 9138, 9099, 9059, 9020, 8981, 8942, 8902, 8863, 8824, 8785, 8746, 8706, 8667, 8628, 8589, 8550, 8510, 8471, 8432, 8393, 8353, 8314, 8275, 8236, 8197, 8157, 8118, 8079, 8040, 8000, 7961, 7922, 7883, 7844, 7804, 7765, 7726, 7687, 7648, 7608, 7569, 7530, 7491, 7451, 7412, 7373, 7334, 7295, 7255, 7216, 7177, 7138, 7099, 7059, 7020, 6981, 6942, 6902, 6863, 6824, 6785, 6746, 6706, 6667, 6628, 6589, 6550, 6510, 6471, 6432, 6393, 6353, 6314, 6275, 6236, 6197, 6157, 6118, 6079, 6040, 6000, 5961, 5922, 5883, 5844, 5804, 5765, 5726, 5687, 5648, 5608, 5569, 5530, 5491, 5451, 5412, 5373, 5334, 5295, 5255, 5216, 5177, 5138, 5099, 5059, 5020, 4981, 4942, 4902, 4863, 4824, 4785, 4746, 4706, 4667, 4628, 4589, 4550, 4510, 4471, 4432, 4393, 4353, 4314, 4275, 4236, 4197, 4157, 4118, 4079, 4040, 4000, 3961, 3922, 3883, 3844, 3804, 3765, 3726, 3687, 3648, 3608, 3569, 3530, 3491, 3451, 3412, 3373, 3334, 3295, 3255, 3216, 3177, 3138, 3099, 3059, 3020, 2981, 2942, 2902, 2863, 2824, 2785, 2746, 2706, 2667, 2628, 2589, 2550, 2510, 2471, 2432, 2393, 2353, 2314, 2275, 2236, 2197, 2157, 2118, 2079, 2040, 2000, 1961, 1922, 1883, 1844, 1804, 1765, 1726, 1687, 1648, 1608, 1569, 1530, 1491, 1451, 1412, 1373, 1334, 1295, 1255, 1216, 1177, 1138, 1099, 1059, 1020, 981, 942, 902, 863, 824, 785, 746, 706, 667, 628, 589, 550, 510, 471, 432, 393, 353, 314, 275, 236, 197, 157, 118, 79, 40, 0};
    static const uint16_t delay60HzLUT[] PROGMEM = {8333, 8301, 8268, 8235, 8203, 8170, 8137, 8105, 8072, 8039, 8007, 7974, 7941, 7909, 7876, 7843, 7811, 7778, 7745, 7713, 7680, 7647, 7615, 7582, 7549, 7517, 7484, 7451, 7419, 7386, 7353, 7320, 7288, 7255, 7222, 7190, 7157, 7124, 7092, 7059, 7026, 6994, 6961, 6928, 6896, 6863, 6830, 6798, 6765, 6732, 6700, 6667, 6634, 6602, 6569, 6536, 6504, 6471, 6438, 6405, 6373, 6340, 6307, 6275, 6242, 6209, 6177, 6144, 6111, 6079, 6046, 6013, 5981, 5948, 5915, 5883, 5850, 5817, 5785, 5752, 5719, 5687, 5654, 5621, 5589, 5556, 5523, 5490, 5458, 5425, 5392, 5360, 5327, 5294, 5262, 5229, 5196, 5164, 5131, 5098, 5066, 5033, 5000, 4968, 4935, 4902, 4870, 4837, 4804, 4772, 4739, 4706, 4674, 4641, 4608, 4575, 4543, 4510, 4477, 4445, 4412, 4379, 4347, 4314, 4281, 4249, 4216, 4183, 4151, 4118, 4085, 4053, 4020, 3987, 3955, 3922, 3889, 3857, 3824, 3791, 3759, 3726, 3693, 3660, 3628, 3595, 3562, 3530, 3497, 3464, 3432, 3399, 3366, 3334, 3301, 3268, 3236, 3203, 3170, 3138, 3105, 3072, 3040, 3007, 2974, 2942, 2909, 2876, 2844, 2811, 2778, 2745, 2713, 2680, 2647, 2615, 2582, 2549, 2517, 2484, 2451, 2419, 2386, 2353, 2321, 2288, 2255, 2223, 2190, 2157, 2125, 2092, 2059, 2027, 1994, 1961, 1929, 1896, 1863, 1830, 1798, 1765, 1732, 1700, 1667, 1634, 1602, 1569, 1536, 1504, 1471, 1438, 1406, 1373, 1340, 1308, 1275, 1242, 1210, 1177, 1144, 1112, 1079, 1046, 1014, 981, 948, 915, 883, 850, 817, 785, 752, 719, 687, 654, 621, 589, 556, 523, 491, 458, 425, 393, 360, 327, 295, 262, 229, 197, 164, 131, 99, 66, 33, 0};
    static const float vrms50HzLUT[] PROGMEM = {0.000000, 0.000625, 0.001767, 0.003246, 0.004997, 0.007036, 0.009236, 0.011625, 0.014191, 0.016920, 0.019878, 0.022910, 0.026080, 0.029381, 0.032898, 0.036449, 0.040116, 0.043895, 0.047781, 0.051875, 0.055968, 0.060159, 0.064443, 0.068819, 0.073399, 0.077952, 0.082587, 0.087304, 0.092223, 0.097096, 0.102043, 0.107062, 0.112152, 0.117442, 0.122667, 0.127956, 0.133307, 0.138719, 0.144330, 0.149859, 0.155444, 0.161082, 0.166918, 0.172659, 0.178450, 0.184287, 0.190170, 0.196250, 0.202222, 0.208234, 0.214286, 0.220533, 0.226661, 0.232824, 0.239021, 0.245251, 0.251673, 0.257965, 0.264286, 0.270633, 0.277007, 0.283569, 0.289991, 0.296434, 0.302899, 0.309549, 0.316051, 0.322570, 0.329105, 0.335654, 0.342384, 0.348959, 0.355544, 0.362138, 0.368741, 0.375521, 0.382137, 0.388758, 0.395382, 0.402179, 0.408807, 0.415436, 0.422063, 0.428689, 0.435481, 0.442099, 0.448711, 0.455317, 0.461916, 0.468674, 0.475254, 0.481824, 0.488381, 0.495094, 0.501625, 0.508140, 0.514640, 0.521124, 0.527755, 0.534201, 0.540627, 0.547033, 0.553580, 0.559941, 0.566278, 0.572591, 0.578879, 0.585300, 0.591534, 0.597739, 0.603915, 0.610062, 0.616334, 0.622418, 0.628470, 0.634488, 0.640626, 0.646574, 0.652488, 0.658365, 0.664205, 0.670156, 0.675919, 0.681642, 0.687326, 0.692969, 0.698714, 0.704273, 0.709789, 0.715261, 0.720829, 0.726211, 0.731549, 0.736841, 0.742086, 0.747418, 0.752567, 0.757669, 0.762722, 0.767726, 0.772806, 0.777709, 0.782561, 0.787362, 0.792233, 0.796929, 0.801573, 0.806163, 0.810701, 0.815299, 0.819728, 0.824103, 0.828422, 0.832796, 0.837004, 0.841157, 0.845253, 0.849294, 0.853380, 0.857306, 0.861176, 0.864988, 0.868744, 0.872536, 0.876176, 0.879757, 0.883281, 0.886836, 0.890243, 0.893592, 0.896883, 0.900116, 0.903372, 0.906487, 0.909545, 0.912545, 0.915486, 0.918444, 0.921268, 0.924036, 0.926745, 0.929465, 0.932059, 0.934595, 0.937075, 0.939499, 0.941925, 0.944235, 0.946488, 0.948687, 0.950829, 0.952970, 0.955002, 0.956979, 0.958903, 0.960821, 0.962637, 0.964400, 0.966111, 0.967770, 0.969419, 0.970975, 0.972481, 0.973937, 0.975380, 0.976737, 0.978046, 0.979308, 0.980523, 0.981722, 0.982844, 0.983922, 0.984956, 0.985946, 0.986917, 0.987822, 0.988686, 0.989509, 0.990312, 0.991056, 0.991762, 0.992431, 0.993064, 0.993676, 0.994238, 0.994767, 0.995263, 0.995727, 0.996171, 0.996574, 0.996948, 0.997294, 0.997621, 0.997914, 0.998182, 0.998427, 0.998648, 0.998853, 0.999032, 0.999191, 0.999332, 0.999456, 0.999566, 0.999658, 0.999736, 0.999801, 0.999856, 0.999898, 0.999932, 0.999957, 0.999975, 0.999987, 0.999995, 0.999998, 1.000000, 1.000000};
    static const float vrms60HzLUT[] PROGMEM = {0.000000, 0.000620, 0.001781, 0.003288, 0.005016, 0.007036, 0.009271, 0.011625, 0.014231, 0.017006, 0.019848, 0.022926, 0.026146, 0.029399, 0.032880, 0.036486, 0.040097, 0.043934, 0.047882, 0.051813, 0.055968, 0.060224, 0.064443, 0.068887, 0.073422, 0.077904, 0.082611, 0.087401, 0.092123, 0.097071, 0.102094, 0.107192, 0.112204, 0.117442, 0.122748, 0.127956, 0.133390, 0.138886, 0.144274, 0.149888, 0.155559, 0.161111, 0.166889, 0.172719, 0.178420, 0.184347, 0.190322, 0.196159, 0.202222, 0.208327, 0.214286, 0.220470, 0.226692, 0.232761, 0.239053, 0.245379, 0.251545, 0.257933, 0.264351, 0.270796, 0.277072, 0.283569, 0.290090, 0.296434, 0.302998, 0.309582, 0.315984, 0.322604, 0.329239, 0.335687, 0.342351, 0.349026, 0.355510, 0.362206, 0.368911, 0.375419, 0.382137, 0.388860, 0.395382, 0.402111, 0.408841, 0.415368, 0.422097, 0.428824, 0.435345, 0.442065, 0.448779, 0.455486, 0.461983, 0.468674, 0.475356, 0.481824, 0.488482, 0.495127, 0.501558, 0.508174, 0.514774, 0.521157, 0.527721, 0.534267, 0.540594, 0.547098, 0.553580, 0.559843, 0.566278, 0.572688, 0.578879, 0.585236, 0.591565, 0.597675, 0.603947, 0.610188, 0.616209, 0.622387, 0.628532, 0.634642, 0.640534, 0.646574, 0.652579, 0.658365, 0.664295, 0.670186, 0.675860, 0.681672, 0.687442, 0.692998, 0.698685, 0.704329, 0.709760, 0.715317, 0.720829, 0.726129, 0.731549, 0.736922, 0.742086, 0.747365, 0.752594, 0.757617, 0.762748, 0.767828, 0.772705, 0.777684, 0.782611, 0.787485, 0.792160, 0.796929, 0.801644, 0.806163, 0.810770, 0.815322, 0.819683, 0.824125, 0.828510, 0.832709, 0.836983, 0.841199, 0.845232, 0.849335, 0.853380, 0.857246, 0.861176, 0.865047, 0.868744, 0.872499, 0.876194, 0.879721, 0.883299, 0.886818, 0.890173, 0.893575, 0.896916, 0.900198, 0.903323, 0.906487, 0.909591, 0.912545, 0.915531, 0.918458, 0.921240, 0.924050, 0.926800, 0.929411, 0.932045, 0.934621, 0.937063, 0.939523, 0.941925, 0.944200, 0.946488, 0.948720, 0.950829, 0.952949, 0.955012, 0.956959, 0.958913, 0.960811, 0.962600, 0.964391, 0.966128, 0.967812, 0.969395, 0.970975, 0.972504, 0.973937, 0.975365, 0.976744, 0.978033, 0.979314, 0.980548, 0.981698, 0.982839, 0.983933, 0.984950, 0.985956, 0.986917, 0.987809, 0.988686, 0.989521, 0.990293, 0.991049, 0.991766, 0.992425, 0.993067, 0.993673, 0.994227, 0.994764, 0.995268, 0.995738, 0.996165, 0.996574, 0.996953, 0.997294, 0.997618, 0.997916, 0.998180, 0.998428, 0.998653, 0.998849, 0.999031, 0.999193, 0.999331, 0.999457, 0.999566, 0.999656, 0.999736, 0.999802, 0.999854, 0.999898, 0.999932, 0.999957, 0.999975, 0.999987, 0.999994, 0.999998, 1.000000, 1.000000};
  } // namespace DimmerInternal
} // namespace Mycila

uint16_t Mycila::Dimmer::_lookupFiringDelay(uint8_t level, float frequency) {
  if (level == 0)
    return 500000 / frequency; // semi-period in microseconds

  if (level == MYCILA_DIMMER_MAX_LEVEL)
    return 0;

  return frequency == 60 ? (uint16_t)pgm_read_word(&Mycila::DimmerInternal::delay60HzLUT[level]) : (uint16_t)pgm_read_word(&Mycila::DimmerInternal::delay50HzLUT[level]);
}

float Mycila::Dimmer::_lookupVrmsFactor(uint8_t level, float frequency) {
  if (level == 0)
    return 0;

  if (level == MYCILA_DIMMER_MAX_LEVEL)
    return 1;

  return frequency == 60 ? static_cast<float>(pgm_read_float(&Mycila::DimmerInternal::vrms60HzLUT[level])) : static_cast<float>(pgm_read_float(&Mycila::DimmerInternal::vrms50HzLUT[level]));
}
