// SPDX-License-Identifier: MIT
/*
 * Copyright (C) 2023-2024 Mathieu Carbou and others
 */
#pragma once

#include "MycilaDimmer.h"
#include <Arduino.h>

#define MYCILA_DIMMER_LUT_SIZE 100

namespace Mycila {
  namespace DimmerInternal {
    static const uint16_t delay50HzLUT[] PROGMEM = {10000, 9362, 9096, 8891, 8718, 8564, 8424, 8295, 8174, 8060, 7951, 7847, 7748, 7651, 7558, 7468, 7380, 7294, 7210, 7128, 7048, 6969, 6891, 6815, 6740, 6666, 6593, 6521, 6450, 6379, 6309, 6240, 6172, 6104, 6036, 5969, 5903, 5837, 5771, 5706, 5640, 5576, 5511, 5447, 5382, 5318, 5254, 5191, 5127, 5063, 5000, 4936, 4872, 4808, 4745, 4681, 4617, 4552, 4488, 4423, 4359, 4293, 4228, 4162, 4096, 4030, 3963, 3895, 3827, 3759, 3690, 3620, 3549, 3478, 3406, 3333, 3259, 3184, 3108, 3030, 2951, 2871, 2789, 2705, 2619, 2531, 2441, 2348, 2251, 2152, 2048, 1939, 1825, 1704, 1575, 1435, 1281, 1108, 903, 637, 0};
    static const uint16_t delay60HzLUT[] PROGMEM = {8333, 7801, 7580, 7409, 7265, 7136, 7020, 6912, 6812, 6716, 6626, 6539, 6456, 6376, 6298, 6223, 6150, 6078, 6008, 5940, 5873, 5807, 5743, 5679, 5617, 5555, 5494, 5434, 5375, 5316, 5258, 5200, 5143, 5086, 5030, 4974, 4919, 4864, 4809, 4755, 4700, 4646, 4592, 4539, 4485, 4432, 4379, 4325, 4272, 4219, 4166, 4113, 4060, 4007, 3954, 3900, 3847, 3794, 3740, 3686, 3632, 3578, 3523, 3468, 3413, 3358, 3302, 3246, 3189, 3132, 3075, 3016, 2958, 2898, 2838, 2777, 2716, 2653, 2590, 2525, 2459, 2392, 2324, 2254, 2183, 2109, 2034, 1956, 1876, 1793, 1706, 1616, 1521, 1420, 1312, 1196, 1068, 923, 752, 531, 0};
    static const float vrms50HzLUT[] PROGMEM = {0.000000, 0.041141, 0.069085, 0.093496, 0.115832, 0.136723, 0.156513, 0.175420, 0.193592, 0.211136, 0.228132, 0.244641, 0.260715, 0.276394, 0.291710, 0.306692, 0.321365, 0.335748, 0.349860, 0.363717, 0.377331, 0.390715, 0.403880, 0.416837, 0.429592, 0.442155, 0.454533, 0.466731, 0.478757, 0.490615, 0.502310, 0.513848, 0.525232, 0.536465, 0.547553, 0.558497, 0.569301, 0.579968, 0.590501, 0.600901, 0.611171, 0.621313, 0.631330, 0.641222, 0.650991, 0.660639, 0.670168, 0.679578, 0.688870, 0.698046, 0.707107, 0.716053, 0.724885, 0.733604, 0.742210, 0.750704, 0.759085, 0.767356, 0.775515, 0.783562, 0.791499, 0.799324, 0.807037, 0.814639, 0.822129, 0.829507, 0.836771, 0.843922, 0.850959, 0.857881, 0.864687, 0.871376, 0.877948, 0.884399, 0.890730, 0.896939, 0.903023, 0.908981, 0.914812, 0.920512, 0.926079, 0.931510, 0.936802, 0.941952, 0.946955, 0.951809, 0.956507, 0.961045, 0.965416, 0.969614, 0.973630, 0.977457, 0.981082, 0.984494, 0.987676, 0.990609, 0.993269, 0.995620, 0.997611, 0.999153, 1.000000};
    static const float vrms60HzLUT[] PROGMEM = {0.000000, 0.041141, 0.069085, 0.093496, 0.115832, 0.136723, 0.156513, 0.175420, 0.193592, 0.211136, 0.228132, 0.244641, 0.260715, 0.276394, 0.291710, 0.306692, 0.321365, 0.335748, 0.349860, 0.363717, 0.377331, 0.390715, 0.403880, 0.416837, 0.429592, 0.442155, 0.454533, 0.466731, 0.478757, 0.490615, 0.502310, 0.513848, 0.525232, 0.536465, 0.547553, 0.558497, 0.569301, 0.579968, 0.590501, 0.600901, 0.611171, 0.621313, 0.631330, 0.641222, 0.650991, 0.660639, 0.670168, 0.679578, 0.688870, 0.698046, 0.707107, 0.716053, 0.724885, 0.733604, 0.742210, 0.750704, 0.759085, 0.767356, 0.775515, 0.783562, 0.791499, 0.799324, 0.807037, 0.814639, 0.822129, 0.829507, 0.836771, 0.843922, 0.850959, 0.857881, 0.864687, 0.871376, 0.877948, 0.884399, 0.890730, 0.896939, 0.903023, 0.908981, 0.914812, 0.920512, 0.926079, 0.931510, 0.936802, 0.941952, 0.946955, 0.951809, 0.956507, 0.961045, 0.965416, 0.969614, 0.973630, 0.977457, 0.981082, 0.984494, 0.987676, 0.990609, 0.993269, 0.995620, 0.997611, 0.999153, 1.000000};
  } // namespace DimmerInternal
} // namespace Mycila

uint16_t Mycila::Dimmer::_lookupFiringDelay(uint8_t level, float frequency) {
  if (level == 0)
    return 500000 / frequency; // semi-period in microseconds

  if (level >= MYCILA_DIMMER_LUT_SIZE)
    return 0;

  return frequency == 60 ? (uint16_t)pgm_read_word(&Mycila::DimmerInternal::delay60HzLUT[level]) : (uint16_t)pgm_read_word(&Mycila::DimmerInternal::delay50HzLUT[level]);
}

float Mycila::Dimmer::_lookupVrmsFactor(uint8_t level, float frequency) {
  if (level == 0)
    return 0;

  if (level >= MYCILA_DIMMER_LUT_SIZE)
    return 1;

  return frequency == 60 ? static_cast<float>(pgm_read_float(&Mycila::DimmerInternal::vrms60HzLUT[level])) : static_cast<float>(pgm_read_float(&Mycila::DimmerInternal::vrms50HzLUT[level]));
}
